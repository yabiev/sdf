// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch –≤ Node.js 18+

async function testGetTasks() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GET /api/tasks...');
    
    // –°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
    const loginResponse = await fetch('http://localhost:3000/api/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'test@example.com',
        password: 'password123'
      })
    });
    
    const loginData = await loginResponse.json();
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:', loginData.success ? '—É—Å–ø–µ—à–Ω–∞' : '–Ω–µ—É–¥–∞—á–Ω–∞');
    
    if (!loginData.success) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è');
      return;
    }
    
    const token = loginData.token;
    
    // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º GET /api/tasks
    const tasksResponse = await fetch('http://localhost:3000/api/tasks?project_id=2618ddd2-9d41-4041-94e8-93ed27c6ef85', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ GET /api/tasks:', tasksResponse.status);
    console.log('üìä Headers:', Object.fromEntries(tasksResponse.headers.entries()));
    
    const responseText = await tasksResponse.text();
    console.log('üìä –û—Ç–≤–µ—Ç (—Ç–µ–∫—Å—Ç):', responseText);
    
    try {
      const tasksData = JSON.parse(responseText);
      console.log('üìä –û—Ç–≤–µ—Ç (JSON):', tasksData);
    } catch (e) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON:', e.message);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

testGetTasks