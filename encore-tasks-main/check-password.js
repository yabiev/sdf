const Database = require('better-sqlite3');
const path = require('path');

try {
  const dbPath = path.join(__dirname, 'database.db');
  const db = new Database(dbPath);
  
  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã users
  const schema = db.prepare("PRAGMA table_info(users)").all();
  console.log('üèóÔ∏è –ü–æ–ª–Ω–∞—è —Å—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
  schema.forEach(col => {
    console.log(`  - ${col.name}: ${col.type} ${col.notnull ? 'NOT NULL' : ''} ${col.pk ? 'PRIMARY KEY' : ''}`);
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è password_hash
  const hasPasswordHash = schema.some(col => col.name === 'password_hash');
  console.log('üîê –ü–æ–ª–µ password_hash —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', hasPasswordHash);
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const user = db.prepare('SELECT * FROM users WHERE email = ?').get('test@example.com');
  console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è test@example.com:');
  console.log(user);
  
  db.close();
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
}