const jwt = require('jsonwebtoken');
const fetch = require('node-fetch');
const { Pool } = require('pg');
require('dotenv').config({ path: '.env.local' });

const JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT || '5432'),
  database: process.env.DB_NAME || 'encore_tasks',
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD || 'postgres',
  ssl: process.env.DB_SSL === 'true'
});

async function testProjectCreation() {
  try {
    console.log('üîë –°–æ–∑–¥–∞–µ–º JWT —Ç–æ–∫–µ–Ω –∏ —Å–µ—Å—Å–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    
    // –°–æ–∑–¥–∞–µ–º JWT —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testUserId = 1;
    const token = jwt.sign(
      { 
        userId: testUserId, 
        email: 'axelencore@mail.ru',
        timestamp: Date.now(),
        random: Math.random().toString(36).substring(2, 15)
      },
      JWT_SECRET,
      { expiresIn: '7d' }
    );
    
    // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 –¥–Ω–µ–π
    await pool.query(
      'INSERT INTO sessions (session_token, user_id, expires_at, created_at) VALUES ($1, $2, $3, NOW())',
      [token, testUserId, expiresAt]
    );
    
    console.log('‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');

    
    // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    const projectData = {
      name: 'API Test Project',
      description: '–ü—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç',
      color: '#10B981'
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
    const response = await fetch('http://localhost:3000/api/projects', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`,
        'Cookie': `auth-token=${token}`
      },
      body: JSON.stringify(projectData)
    });
    
    console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
    
    const responseData = await response.json();
    console.log('üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', JSON.stringify(responseData, null, 2));
    
    if (response.ok) {
      console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ API!');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:', responseData.error);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);
  }
}

testProjectCreation();