const Database = require('better-sqlite3');
const path = require('path');

try {
  const dbPath = path.join(__dirname, 'database.db');
  const db = new Database(dbPath);
  
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getUserByEmail...');
  
  // –ü—Ä—è–º–æ–π SQL –∑–∞–ø—Ä–æ—Å
  const stmt = db.prepare('SELECT * FROM users WHERE email = ?');
  const user = stmt.get('test@example.com');
  
  console.log('üë§ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä—è–º–æ–≥–æ SQL –∑–∞–ø—Ä–æ—Å–∞:');
  console.log(user);
  
  if (user) {
    console.log('\n‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω!');
    console.log('üìã –î–µ—Ç–∞–ª–∏:');
    console.log('  ID:', user.id);
    console.log('  Email:', user.email);
    console.log('  Name:', user.name);
    console.log('  Password hash:', user.password_hash ? '–µ—Å—Ç—å' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    console.log('  Role:', user.role);
    
    // –¢–µ—Å—Ç –ø–∞—Ä–æ–ª—è
    if (user.password_hash) {
      const bcrypt = require('bcryptjs');
      const isValid = bcrypt.compareSync('password123', user.password_hash);
      console.log('  –ü–∞—Ä–æ–ª—å password123 –≤–∞–ª–∏–¥–µ–Ω:', isValid);
    }
  } else {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  }
  
  db.close();
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
}