const fetch = require('node-fetch');

async function testProjectCreation() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...');
    
    // –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    const projectData = {
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      color: '#ff6b6b'
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:', projectData);
    
    const response = await fetch('http://localhost:3001/api/projects', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': 'auth-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzYTAyOGRkNS01MzI3LTQ1N2EtYjhkNC0xMWM3ZTJjNzA2Y2UiLCJlbWFpbCI6ImF4ZWxlbmNvcmVAbWFpbC5ydSIsInRpbWVzdGFtcCI6MTc1NzI2OTc3OTI1MywicmFuZG9tIjoiNG4yeWxkaXFyZyIsImlhdCI6MTc1NzI2OTc3OSwiZXhwIjoxNzU3ODc0NTc5fQ.fF3pbUPG-b1apBIKkHmTdpnZZIreWXI7_4d5Z4riyB0'
      },
      body: JSON.stringify(projectData)
    });
    
    const result = await response.json();
    console.log('üì• –û—Ç–≤–µ—Ç API:', JSON.stringify(result, null, 2));
    
    if (result.success && result.data && result.data.id) {
      console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
      console.log('üÜî ID –ø—Ä–æ–µ–∫—Ç–∞:', result.data.id);
      console.log('üìù –ù–∞–∑–≤–∞–Ω–∏–µ:', result.data.name);
      console.log('üé® –¶–≤–µ—Ç:', result.data.color);
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –ø–æ—è–≤–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤...');
      const listResponse = await fetch('http://localhost:3001/api/projects', {
        headers: {
          'Cookie': 'auth-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzYTAyOGRkNS01MzI3LTQ1N2EtYjhkNC0xMWM3ZTJjNzA2Y2UiLCJlbWFpbCI6ImF4ZWxlbmNvcmVAbWFpbC5ydSIsInRpbWVzdGFtcCI6MTc1NzI2OTc3OTI1MywicmFuZG9tIjoiNG4yeWxkaXFyZyIsImlhdCI6MTc1NzI2OTc3OSwiZXhwIjoxNzU3ODc0NTc5fQ.fF3pbUPG-b1apBIKkHmTdpnZZIreWXI7_4d5Z4riyB0'
        }
      });
      
      const listResult = await listResponse.json();
      console.log('üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤:', JSON.stringify(listResult, null, 2));
      
      const createdProject = listResult.data?.projects?.find(p => p.id === result.data.id);
      if (createdProject) {
        console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ!');
        console.log('üéØ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ - –æ—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
      } else {
        console.log('‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:', result);
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

testProjectCreation().catch(console.error);