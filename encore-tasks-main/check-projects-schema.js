const Database = require('better-sqlite3');
const path = require('path');

const dbPath = path.join(__dirname, 'database.sqlite');
const db = new Database(dbPath);

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã projects:');

try {
  // –ü–æ–ª—É—á–∞–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã projects
  const schema = db.prepare("SELECT sql FROM sqlite_master WHERE type='table' AND name='projects'").get();
  
  if (schema) {
    console.log('üìã –°—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã projects:');
    console.log(schema.sql);
  } else {
    console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ projects –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–æ–Ω–∫–∞—Ö
  const columns = db.prepare("PRAGMA table_info(projects)").all();
  
  console.log('\nüìä –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã projects:');
  columns.forEach(col => {
    console.log(`  - ${col.name} (${col.type}) ${col.notnull ? 'NOT NULL' : ''} ${col.pk ? 'PRIMARY KEY' : ''}`);
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
  const count = db.prepare("SELECT COUNT(*) as count FROM projects").get();
  console.log(`\nüìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ projects: ${count.count}`);
  
  if (count.count > 0) {
    const sample = db.prepare("SELECT * FROM projects LIMIT 3").all();
    console.log('\nüìù –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:');
    sample.forEach((row, index) => {
      console.log(`  ${index + 1}. ID: ${row.id}, Name: ${row.name}`);
      console.log(`     Columns: ${Object.keys(row).join(', ')}`);
    });
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
} finally {
  db.close();
}