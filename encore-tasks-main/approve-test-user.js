const Database = require('better-sqlite3');
const path = require('path');

async function approveTestUser() {
  console.log('üîß –û–¥–æ–±—Ä–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
  
  try {
    const dbPath = path.join(__dirname, 'database.sqlite');
    const db = new Database(dbPath);
    
    // –ù–∞–π–¥–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const testUsers = db.prepare(`
      SELECT id, email, name, approval_status, created_at 
      FROM users 
      WHERE email LIKE '%test%@example.com'
      ORDER BY created_at DESC
    `).all();
    
    if (testUsers.length === 0) {
      console.log('‚ùå –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      db.close();
      return;
    }
    
    console.log('üë§ –ù–∞–π–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
    testUsers.forEach(user => {
      console.log(`  - ${user.email} (ID: ${user.id}, –û–¥–æ–±—Ä–µ–Ω: ${user.approval_status})`);
    });
    
    // –û–¥–æ–±—Ä—è–µ–º –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const updateStmt = db.prepare(`
      UPDATE users 
      SET approval_status = 1 
      WHERE email LIKE '%test%@example.com'
    `);
    
    const result = updateStmt.run();
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${result.changes}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const updatedUsers = db.prepare(`
      SELECT id, email, name, approval_status, created_at 
      FROM users 
      WHERE email LIKE '%test%@example.com'
      ORDER BY created_at DESC
    `).all();
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    updatedUsers.forEach(user => {
      console.log(`  - ${user.email} (ID: ${user.id}, –û–¥–æ–±—Ä–µ–Ω: ${user.approval_status})`);
    });
    
    db.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

approveTestUser();