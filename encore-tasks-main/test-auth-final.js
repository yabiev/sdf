const fs = require('fs');
const path = require('path');

console.log('üß™ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
async function makeRequest(url, options = {}) {
  try {
    const response = await fetch(url, {
      headers: {
        'Content-Type': 'application/json',
        ...options.headers
      },
      ...options
    });
    
    const data = await response.text();
    let jsonData;
    try {
      jsonData = JSON.parse(data);
    } catch {
      jsonData = data;
    }
    
    return {
      status: response.status,
      ok: response.ok,
      data: jsonData
    };
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ ${url}:`, error.message);
    return { error: error.message };
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testAuthAfterFix() {
  const baseUrl = 'http://localhost:3000';
  
  console.log('\n1. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
  const healthResponse = await makeRequest(`${baseUrl}/api/health`);
  if (healthResponse.error) {
    console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ npm run dev –∑–∞–ø—É—â–µ–Ω.');
    return;
  }
  
  console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
  
  console.log('\n2. üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–æ–¥–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã
  const authFilePath = path.join(__dirname, 'src', 'app', 'api', 'auth', 'login', 'route.ts');
  
  if (fs.existsSync(authFilePath)) {
    const authContent = fs.readFileSync(authFilePath, 'utf8');
    
    if (authContent.includes('// –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ approval_status')) {
      console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ approval_status –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–¥–µ');
    } else if (authContent.includes('approval_status')) {
      console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ approval_status –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω–∞');
    } else {
      console.log('‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ approval_status –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ–¥–µ');
    }
  }
  
  console.log('\n3. üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º...');
  
  const loginData = {
    email: 'test@example.com',
    password: 'password123'
  };
  
  console.log(`üì§ –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞: ${loginData.email}`);
  const loginResponse = await makeRequest(`${baseUrl}/api/auth/login`, {
    method: 'POST',
    body: JSON.stringify(loginData)
  });
  
  console.log('üì• –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Ö–æ–¥–∞:', {
    status: loginResponse.status,
    ok: loginResponse.ok,
    hasToken: loginResponse.data?.token ? '–¥–∞' : '–Ω–µ—Ç',
    error: loginResponse.data?.error || '–Ω–µ—Ç'
  });
  
  if (loginResponse.ok && loginResponse.data?.token) {
    console.log('üéâ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!');
    
    const authHeaders = {
      'Authorization': `Bearer ${loginResponse.data.token}`
    };
    
    console.log('\n4. üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    console.log('üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const profileResponse = await makeRequest(`${baseUrl}/api/auth/me`, {
      headers: authHeaders
    });
    
    console.log('üìä –ü—Ä–æ—Ñ–∏–ª—å:', {
      status: profileResponse.status,
      ok: profileResponse.ok,
      hasUser: profileResponse.data?.user ? '–¥–∞' : '–Ω–µ—Ç',
      userEmail: profileResponse.data?.user?.email || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    });
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
    console.log('\nüìÅ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...');
    const projectsResponse = await makeRequest(`${baseUrl}/api/projects`, {
      headers: authHeaders
    });
    
    console.log('üìä –ü—Ä–æ–µ–∫—Ç—ã:', {
      status: projectsResponse.status,
      ok: projectsResponse.ok,
      count: Array.isArray(projectsResponse.data) ? projectsResponse.data.length : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
      error: projectsResponse.data?.error || '–Ω–µ—Ç'
    });
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüë• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await makeRequest(`${baseUrl}/api/users`, {
      headers: authHeaders
    });
    
    console.log('üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', {
      status: usersResponse.status,
      ok: usersResponse.ok,
      count: Array.isArray(usersResponse.data) ? usersResponse.data.length : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
      error: usersResponse.data?.error || '–Ω–µ—Ç'
    });
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å–∫–∏ (–æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    console.log('\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ—Å–∫–∏...');
    const boardData = {
      name: '–¢–µ—Å—Ç–æ–≤–∞—è –¥–æ—Å–∫–∞',
      description: '–î–æ—Å–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞'
    };
    
    const createBoardResponse = await makeRequest(`${baseUrl}/api/boards`, {
      method: 'POST',
      headers: authHeaders,
      body: JSON.stringify(boardData)
    });
    
    console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å–∫–∏:', {
      status: createBoardResponse.status,
      ok: createBoardResponse.ok,
      hasBoard: createBoardResponse.data?.id ? '–¥–∞' : '–Ω–µ—Ç',
      error: createBoardResponse.data?.error || '–Ω–µ—Ç'
    });
    
    console.log('\nüìà –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:');
    const results = {
      '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É': loginResponse.ok ? '‚úÖ' : '‚ùå',
      '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è': profileResponse.ok ? '‚úÖ' : '‚ùå',
      '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤': projectsResponse.ok ? '‚úÖ' : '‚ùå',
      '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π': usersResponse.ok ? '‚úÖ' : '‚ùå',
      '–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å–∫–∏': createBoardResponse.ok ? '‚úÖ' : '‚ùå'
    };
    
    Object.entries(results).forEach(([test, result]) => {
      console.log(`  ${result} ${test}`);
    });
    
    const allPassed = Object.values(results).every(result => result === '‚úÖ');
    
    if (allPassed) {
      console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ —Ä–µ—à–µ–Ω—ã.');
    } else {
      console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
    }
    
  } else {
    console.log('\n‚ùå –í—Ö–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    
    if (loginResponse.status === 401) {
      console.log('1. –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      console.log('2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      console.log('3. –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö');
    } else if (loginResponse.status === 403) {
      console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ approval_status –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω–∞');
      console.log('2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
    } else {
      console.log('1. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
      console.log('2. –û—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
    
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ (npm run dev)');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ route.ts –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testAuthAfterFix().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
});