const { Pool } = require('pg');

async function checkTasksTable() {
  const pool = new Pool({
    host: 'localhost',
    port: 5432,
    database: 'encore_tasks',
    user: 'postgres',
    password: 'newpassword123'
  });

  try {
    console.log('üîç Checking tasks table structure...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã tasks
    const result = await pool.query(`
      SELECT column_name, data_type, is_nullable
      FROM information_schema.columns 
      WHERE table_name = 'tasks' 
      AND table_schema = 'public'
      ORDER BY ordinal_position;
    `);
    
    console.log('\nüìã Tasks table columns:');
    result.rows.forEach(row => {
      console.log(`- ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable})`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
    const countResult = await pool.query('SELECT COUNT(*) as count FROM tasks');
    console.log(`\nüìä Total tasks in table: ${countResult.rows[0].count}`);
    
    // –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –µ—Å–ª–∏ –µ—Å—Ç—å
    if (countResult.rows[0].count > 0) {
      const sampleResult = await pool.query('SELECT * FROM tasks LIMIT 3');
      console.log('\nüìù Sample tasks:');
      sampleResult.rows.forEach((task, index) => {
        console.log(`Task ${index + 1}:`, task);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Error checking tasks table:', error.message);
  } finally {
    await pool.end();
  }
}

checkTasksTable();