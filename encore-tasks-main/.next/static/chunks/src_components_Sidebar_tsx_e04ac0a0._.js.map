{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/Projects/encore-tasks/encore-tasks-main/src/components/Sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { useApp } from \"@/contexts/AppContext\";\nimport { cn, getInitials } from \"@/lib/utils\";\nimport {\n  Activity, AlertCircle, AlertTriangle, Anchor, Archive, ArrowDown, ArrowLeft, ArrowRight, ArrowUp,\n  AtSign, Atom, Award, BarChart3, Battery, Bluetooth, Book, BookOpen, Bookmark, Box, Briefcase,\n  Brush, Bug, Building, Calculator, Calendar, Camera, Car, Check, CheckCircle, CheckCircle2,\n  ChevronDown, ChevronLeft, ChevronRight, ChevronUp, Circle, Clipboard, Clock, Cloud, CloudRain,\n  Code, Code2, Coffee, Cpu, CreditCard, Crown, Database, DollarSign, Download, Edit, Edit2, Edit3,\n  Eye, Feather, File, FileText, Film, Fingerprint, Flag, Flame, Folder, Gamepad, Gamepad2, Gem,\n  Gift, GitBranch, Github, Glasses, Globe, GraduationCap, Hammer, HardDrive, Headphones, Heart,\n  HelpCircle, Home, Image, Infinity, Info, Kanban, Key, Laptop, Layers, Leaf, Lightbulb, Link,\n  Lock, Mail, MapPin, MessageCircle, MessageSquare, Mic, MinusCircle, Monitor, Moon, Music,\n  Navigation, Network, Package, Palette, Paperclip, Pause, PenTool, Phone, PieChart, Pill, Plane,\n  Play, Plus, PlusCircle, Printer, RefreshCw, Rocket, RotateCcw, RotateCw, Save, Scissors,\n  Server, Settings, Share, Share2, Shield, ShoppingBag, ShoppingCart, SkipBack, SkipForward,\n  Smartphone, Sparkles, Square, Star, Store, Sun, Tag, Target, Terminal, Trash, Trash2, TrendingUp,\n  Trophy, Tv, Type, Umbrella, Unlock, Upload, Users, Utensils, Video, Volume, Volume2, Wallet,\n  Watch, Wifi, Wrench, X, XCircle, Zap\n} from \"lucide-react\";\nimport { CreateProjectModal } from \"./CreateProjectModal\";\nimport { useConfirmation } from \"@/hooks/useConfirmation\";\n\ninterface SidebarProps {\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n  onNavigate?: (page: string) => void;\n  currentPage?: string;\n}\n\n// Function to get icon component by name\nconst getIconComponent = (iconName: string) => {\n  const iconMap: { [key: string]: any } = {\n    Activity, AlertCircle, AlertTriangle, Anchor, Archive, ArrowDown, ArrowLeft, ArrowRight, ArrowUp,\n    AtSign, Atom, Award, BarChart3, Battery, Bluetooth, Book, BookOpen, Bookmark, Box, Briefcase,\n    Brush, Bug, Building, Calculator, Camera, Car, Check, CheckCircle, CheckCircle2, ChevronDown,\n    ChevronLeft, ChevronRight, ChevronUp, Circle, Clipboard, Clock, Cloud, CloudRain, Code, Code2,\n    Coffee, Cpu, CreditCard, Crown, Database, DollarSign, Download, Edit, Edit2, Edit3, Eye,\n    Feather, File, FileText, Film, Fingerprint, Flag, Flame, Folder, Gamepad, Gamepad2, Gem,\n    Gift, GitBranch, Github, Glasses, Globe, GraduationCap, Hammer, HardDrive, Headphones, Heart,\n    HelpCircle, Home, Image, Infinity, Info, Kanban, Key, Laptop, Layers, Leaf, Lightbulb, Link,\n    Lock, Mail, MapPin, MessageCircle, MessageSquare, Mic, MinusCircle, Monitor, Moon, Music,\n    Navigation, Network, Package, Palette, Paperclip, Pause, PenTool, Phone, PieChart, Pill,\n    Plane, Play, PlusCircle, Printer, RefreshCw, Rocket, RotateCcw, RotateCw, Save, Scissors,\n    Server, Share, Share2, ShoppingBag, ShoppingCart, SkipBack, SkipForward, Smartphone, Sparkles,\n    Square, Star, Store, Sun, Tag, Target, Terminal, Trash, Trash2, TrendingUp, Trophy, Tv,\n    Type, Umbrella, Unlock, Upload, Users, Utensils, Video, Volume, Volume2, Wallet, Watch,\n    Wifi, Wrench, X, XCircle, Zap\n  };\n  return iconMap[iconName] || Kanban; // Default to Kanban if icon not found\n};\n\nexport function Sidebar({\n  isCollapsed = false,\n  onNavigate,\n  currentPage = \"boards\"\n}: SidebarProps) {\n  const { state, dispatch, createProject, loadProjects, deleteProject } = useApp();\n  const { ConfirmationComponent, confirm } = useConfirmation();\n  const [expandedProjects, setExpandedProjects] = useState<Set<string>>(\n    new Set(state.selectedProject ? [state.selectedProject.id] : [])\n  );\n  const [isCreateProjectModalOpen, setIsCreateProjectModalOpen] =\n  useState(false);\n\n\n  const toggleProject = (projectId: string) => {\n    const newExpanded = new Set(expandedProjects);\n    if (newExpanded.has(projectId)) {\n      newExpanded.delete(projectId);\n    } else {\n      newExpanded.add(projectId);\n    }\n    setExpandedProjects(newExpanded);\n  };\n\n  const handleProjectSelect = (project: any) => {\n    dispatch({ type: \"SELECT_PROJECT\", payload: project });\n    if (!expandedProjects.has(project.id)) {\n      setExpandedProjects((prev) => new Set([...prev, project.id]));\n    }\n  };\n\n  const handleCreateProject = async (projectData: any) => {\n    try {\n      const success = await createProject({\n        name: projectData.name,\n        description: projectData.description,\n        color: projectData.color\n      });\n      \n      if (success) {\n        // Перезагружаем проекты после создания\n        await loadProjects();\n        \n        // Переходим на страницу досок\n        if (currentPage !== \"boards\") {\n          onNavigate?.(\"boards\");\n        }\n        \n        // Закрываем модальное окно только при успешном создании\n        setIsCreateProjectModalOpen(false);\n      } else {\n        // При ошибке не закрываем модальное окно\n        throw new Error('Ошибка сервера. Попробуйте позже.');\n      }\n    } catch (error) {\n      console.error('Failed to create project:', error);\n      // Модальное окно остается открытым при ошибке\n      // Можно добавить отображение ошибки пользователю\n    }\n  };\n\n  const handleDeleteProject = async (projectId: string, projectName: string) => {\n    const confirmed = await confirm({\n      title: 'Удаление проекта',\n      message: `Вы уверены, что хотите удалить проект \"${projectName}\"? Это действие нельзя отменить.`,\n      confirmText: 'Удалить',\n      cancelText: 'Отмена',\n      type: 'danger'\n    });\n\n    if (confirmed) {\n      try {\n        await deleteProject(projectId);\n        // Перезагружаем проекты после удаления\n        await loadProjects();\n        \n        // Если удаленный проект был выбран, сбрасываем выбор\n        if (state.selectedProject?.id === projectId) {\n          dispatch({ type: \"SELECT_PROJECT\", payload: null });\n          dispatch({ type: \"SELECT_BOARD\", payload: null });\n        }\n      } catch (error) {\n        console.error('Failed to delete project:', error);\n        // Заменим alert на более красивое уведомление позже\n        const errorConfirmed = await confirm({\n          title: 'Ошибка',\n          message: 'Произошла ошибка при удалении проекта. Попробуйте еще раз.',\n          confirmText: 'ОК',\n          type: 'danger'\n        });\n      }\n    }\n  };\n\n\n\n  const handleBoardSelect = (board: any) => {\n    // Найти и выбрать проект, к которому принадлежит доска\n    const project = state.projects.find(p => p.id === board.projectId);\n    if (project && state.selectedProject?.id !== project.id) {\n      dispatch({ type: \"SELECT_PROJECT\", payload: project });\n    }\n    \n    dispatch({ type: \"SELECT_BOARD\", payload: board });\n    // Navigate to boards page when selecting a board\n    if (currentPage !== \"boards\") {\n      onNavigate?.(\"boards\");\n    }\n  };\n\n  const menuItems = [\n  {\n    icon: Home,\n    label: \"Главная\",\n    active: currentPage === \"home\",\n    page: \"home\"\n  },\n  {\n    icon: Kanban,\n    label: \"Доски\",\n    active: currentPage === \"boards\",\n    page: \"boards\"\n  },\n  {\n    icon: Calendar,\n    label: \"Календарь\",\n    active: currentPage === \"calendar\",\n    page: \"calendar\"\n  },\n  {\n    icon: Users,\n    label: \"Команда\",\n    active: currentPage === \"team\",\n    page: \"team\"\n  },\n  ...(state.currentUser?.role === 'admin' ? [{\n    icon: Shield,\n    label: \"Администрирование\",\n    active: currentPage === \"admin\",\n    page: \"admin\",\n    badge: state.pendingUserNotifications?.length || 0\n  }] : []),\n  {\n    icon: Settings,\n    label: \"Настройки\",\n    active: currentPage === \"settings\",\n    page: \"settings\"\n  }];\n\n\n  return (\n    <>\n      <div\n        className={cn(\n          \"h-full bg-gray-900/95 lg:bg-gray-900/50 backdrop-blur-xl border-r border-white/10 transition-all duration-300 overflow-y-auto\",\n          isCollapsed ? \"w-16\" : \"w-80\"\n        )}\n        data-oid=\"lxi59qh\">\n\n        {/* Header */}\n        <div className=\"p-4 border-b border-white/10 flex-shrink-0\" data-oid=\"v9s61at\">\n          {!isCollapsed && (\n              <div className=\"flex items-center gap-2\">\n                <h1\n                className=\"text-xl text-white font-montserrat\"\n                data-oid=\"-tyxp.t\">\n\n                  <span className=\"font-black\">ENCORE</span> <span className=\"relative -top-0.5\">|</span> <span className=\"text-primary-500 font-medium\">TASKS</span>\n                </h1>\n                <span className=\"text-xs text-white bg-blue-500/30 px-2 py-0.5 rounded-full font-medium relative -top-px\">\n                   team\n                 </span>\n              </div>\n          )}\n        </div>\n\n\n\n        {/* Navigation */}\n        <nav className=\"px-4 py-2\" data-oid=\"-5p8.9j\">\n          <ul className=\"space-y-1\" data-oid=\"o.t7f2z\">\n            {menuItems.map((item, index) =>\n            <li key={item.page} data-oid=\"_-mo9hq\">\n                <button\n                onClick={() => onNavigate?.(item.page)}\n                className={cn(\n                  \"sidebar-button\",\n                  item.active ? \"active\" : \"\"\n                )}\n                data-oid=\"78an39p\">\n\n                  <item.icon\n                  className=\"sidebar-button-icon\"\n                  data-oid=\"8onxj39\" />\n\n                  {!isCollapsed && (\n                <span className=\"sidebar-button-text\" data-oid=\"7a.ykm-\">\n                      {item.label}\n                    </span>\n                )}\n                  {!isCollapsed && item.badge && item.badge > 0 && (\n                    <span className=\"sidebar-button-badge\">\n                      {item.badge}\n                    </span>\n                  )}\n                </button>\n              </li>\n            )}\n          </ul>\n        </nav>\n\n        {/* Projects */}\n        {!isCollapsed && (\n        <div className=\"px-4 py-4\" data-oid=\"dt79tzq\">\n            <div\n            className=\"flex items-center justify-between mb-3\"\n            data-oid=\"wb0b8d-\">\n\n              <h3\n              className=\"text-sm font-medium text-gray-300\"\n              data-oid=\"b.s3t45\">\n\n                Проекты\n              </h3>\n              {/* Only admins and managers can create projects */}\n              {(state.currentUser?.role === 'admin' || state.currentUser?.role === 'manager') && (\n                <button\n                onClick={() => setIsCreateProjectModalOpen(true)}\n                className=\"p-1 hover:bg-white/10 rounded\"\n                title=\"Создать новый проект\"\n                data-oid=\"yeaiq47\">\n\n                  <Plus className=\"w-4 h-4 text-gray-400\" data-oid=\"0ir485f\" />\n                </button>\n              )}\n            </div>\n\n            <div className=\"space-y-1\" data-oid=\"-w9-kot\">\n              {state.projects\n                .filter(project => \n                  // Администраторы видят все проекты\n                  state.currentUser?.role === 'admin' ||\n                  // Обычные пользователи видят только проекты, где они участники\n                  project.members?.some(member => member.userId === state.currentUser?.id) ||\n                  // Или проекты, где пользователь является владельцем\n                  project.ownerId === state.currentUser?.id\n                )\n                .map((project) =>\n            <div key={project.id || `project-${Math.random()}`} data-oid=\"84we0r7\">\n                  <div className=\"group flex items-center\">\n                    <button\n                  onClick={() => {\n                    handleProjectSelect(project);\n                    // Разворачиваем список досок\n                    if (!expandedProjects.has(project.id)) {\n                      setExpandedProjects((prev) => new Set([...prev, project.id]));\n                    }\n                  }}\n                  className={cn(\n                    \"flex-1 flex items-center gap-2 px-3 py-2 rounded-lg transition-colors\",\n                    state.selectedProject?.id === project.id ?\n                    \"bg-primary-500/20 text-primary-300\" :\n                    \"text-gray-400 hover:text-white hover:bg-white/5\"\n                  )}\n                  data-oid=\"pg1f6uz\">\n\n                      {expandedProjects.has(project.id) ?\n                  <ChevronDown className=\"w-4 h-4\" data-oid=\"kdc:96m\" /> :\n\n                  <ChevronRight className=\"w-4 h-4\" data-oid=\"q_xy_2_\" />\n                  }\n                      <div\n                    className=\"w-3 h-3 rounded-full flex-shrink-0\"\n                    style={{ backgroundColor: project.color }}\n                    data-oid=\"dcrcm_o\" />\n\n                      <span className=\"text-sm truncate\" data-oid=\".rqjx9y\">\n                        {project.name}\n                      </span>\n                    </button>\n                    \n                    {/* Delete button for admins */}\n                    {state.currentUser?.role === 'admin' && (\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleDeleteProject(project.id, project.name);\n                        }}\n                        className=\"opacity-0 group-hover:opacity-100 p-1 hover:bg-red-500/20 rounded transition-all\"\n                        title=\"Удалить проект\"\n                      >\n                        <Trash2 className=\"w-4 h-4 text-red-400 hover:text-red-300\" />\n                      </button>\n                    )}\n                  </div>\n\n                  {expandedProjects.has(project.id) &&\n              <div className=\"ml-6 mt-1 space-y-1\" data-oid=\"g760dol\">\n                      {state.boards.\n                filter((board) => {\n                  // Доска должна принадлежать проекту\n                  if (board.projectId !== project.id) return false;\n                  \n                  // Администраторы видят все доски\n                  if (state.currentUser?.role === 'admin') return true;\n                  \n                  // Обычные пользователи видят доски только тех проектов, где они участники\n                  return project.members.some(member => member.id === state.currentUser?.id);\n                }).\n                map((board) =>\n                <button\n                  key={board.id || `board-${Math.random()}`}\n                  onClick={() => handleBoardSelect(board)}\n                  className={cn(\n                    \"w-full flex items-center gap-2 px-3 py-1.5 rounded text-left transition-colors\",\n                    state.selectedBoard?.id === board.id ?\n                    \"bg-primary-500/10 text-primary-400\" :\n                    \"text-gray-500 hover:text-gray-300 hover:bg-white/5\"\n                  )}\n                  data-oid=\"90azt_n\">\n\n                            {React.createElement(getIconComponent(board.icon || 'Kanban'), { className: \"w-4 h-4\" })}\n                            <span\n                    className=\"text-sm truncate\"\n                    data-oid=\"c0ff9i.\">\n\n                              {board.name}\n                            </span>\n                          </button>\n                )}\n                    </div>\n              }\n                </div>\n            )}\n            </div>\n          </div>\n        )}\n\n        {/* Quick Stats */}\n        {!isCollapsed && (\n        <div\n          className=\"px-4 py-4 border-t border-white/10 mt-auto\"\n          data-oid=\"s.e.94j\">\n\n            <h3\n            className=\"text-sm font-medium text-gray-300 mb-3\"\n            data-oid=\".7.yddc\">\n\n              Статистика\n            </h3>\n            <div className=\"space-y-2\" data-oid=\"8-i5enu\">\n              <div className=\"flex justify-between text-sm\" data-oid=\"cbsuq5y\">\n                <span className=\"text-gray-400\" data-oid=\"szvwry1\">\n                  Всего задач:\n                </span>\n                <span className=\"text-white\" data-oid=\"hx-3kgh\">\n                  {\n                state.tasks.filter(\n                  (t) =>\n                  t.projectId === state.selectedProject?.id &&\n                  t.boardId === state.selectedBoard?.id\n                ).length\n                }\n                </span>\n              </div>\n              <div className=\"flex justify-between text-sm\" data-oid=\"y1z88ni\">\n                <span className=\"text-gray-400\" data-oid=\"ltw35p8\">\n                  В работе:\n                </span>\n                <span className=\"text-yellow-400\" data-oid=\"9tx:e8i\">\n                  {\n                state.tasks.filter(\n                  (t) =>\n                  t.status === \"in-progress\" &&\n                  t.projectId === state.selectedProject?.id &&\n                  t.boardId === state.selectedBoard?.id\n                ).length\n                }\n                </span>\n              </div>\n\n              <div className=\"flex justify-between text-sm\" data-oid=\"f-_t:5s\">\n                <span className=\"text-gray-400\" data-oid=\"2xk77q7\">\n                  Выполнено:\n                </span>\n                <span className=\"text-green-400\" data-oid=\":9j5spk\">\n                  {\n                state.tasks.filter(\n                  (t) =>\n                  t.status === \"done\" &&\n                  t.projectId === state.selectedProject?.id &&\n                  t.boardId === state.selectedBoard?.id\n                ).length\n                }\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Create Project Modal */}\n      <CreateProjectModal\n        isOpen={isCreateProjectModalOpen}\n        onClose={() => setIsCreateProjectModalOpen(false)}\n        onSave={handleCreateProject}\n        data-oid=\"ej_zwfb\" />\n\n      {/* Confirmation Modal */}\n      {ConfirmationComponent()}\n\n    </>);\n\n}"],"names":[],"mappingsiBA;AACA;;;AAvBA;;;;;;;AAgCA,yCAAyC;AACzC,MAAM,mBAAmB,CAAC;IACxB,MAAM,UAAkC;QACtC,UAAA,6MAAA,CAAA,WAAQ;QAAE,aAAA,uNAAA,CAAA,cAAW;QAAE,eAAA,2NAAA,CAAA,gBAAa;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,WAAA,mNAAA,CAAA,YAAS;QAAE,WAAA,mNAAA,CAAA,YAAS;QAAE,YAAA,qNAAA,CAAA,aAAU;QAAE,SAAA,+MAAA,CAAA,UAAO;QAChG,QAAA,6MAAA,CAAA,SAAM;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,WAAA,qNAAA,CAAA,YAAS;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,WAAA,+MAAA,CAAA,YAAS;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,UAAA,iNAAA,CAAA,WAAQ;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAAE,KAAA,mMAAA,CAAA,MAAG;QAAE,WAAA,+MAAA,CAAA,YAAS;QAC5F,OAAA,uMAAA,CAAA,QAAK;QAAE,KAAA,mMAAA,CAAA,MAAG;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAAE,YAAA,iNAAA,CAAA,aAAU;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,KAAA,mMAAA,CAAA,MAAG;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,aAAA,8NAAA,CAAA,cAAW;QAAE,cAAA,wNAAA,CAAA,eAAY;QAAE,aAAA,uNAAA,CAAA,cAAW;QAC5F,aAAA,uNAAA,CAAA,cAAW;QAAE,cAAA,yNAAA,CAAA,eAAY;QAAE,WAAA,mNAAA,CAAA,YAAS;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,WAAA,+MAAA,CAAA,YAAS;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,WAAA,mNAAA,CAAA,YAAS;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,OAAA,6MAAA,CAAA,QAAK;QAC7F,QAAA,yMAAA,CAAA,SAAM;QAAE,KAAA,mMAAA,CAAA,MAAG;QAAE,YAAA,qNAAA,CAAA,aAAU;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAAE,YAAA,qNAAA,CAAA,aAAU;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAAE,MAAA,8MAAA,CAAA,OAAI;QAAE,OAAA,qMAAA,CAAA,QAAK;QAAE,OAAA,6MAAA,CAAA,QAAK;QAAE,KAAA,mMAAA,CAAA,MAAG;QACvF,SAAA,2MAAA,CAAA,UAAO;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,UAAA,iNAAA,CAAA,WAAQ;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,aAAA,mNAAA,CAAA,cAAW;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,UAAA,iNAAA,CAAA,WAAQ;QAAE,KAAA,mMAAA,CAAA,MAAG;QACvF,MAAA,qMAAA,CAAA,OAAI;QAAE,WAAA,mNAAA,CAAA,YAAS;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,eAAA,2NAAA,CAAA,gBAAa;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,WAAA,mNAAA,CAAA,YAAS;QAAE,YAAA,iNAAA,CAAA,aAAU;QAAE,OAAA,uMAAA,CAAA,QAAK;QAC5F,YAAA,iOAAA,CAAA,aAAU;QAAE,MAAA,sMAAA,CAAA,OAAI;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,KAAA,mMAAA,CAAA,MAAG;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,WAAA,+MAAA,CAAA,YAAS;QAAE,MAAA,qMAAA,CAAA,OAAI;QAC3F,MAAA,qMAAA,CAAA,OAAI;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,QAAA,6MAAA,CAAA,SAAM;QAAE,eAAA,2NAAA,CAAA,gBAAa;QAAE,eAAA,2NAAA,CAAA,gBAAa;QAAE,KAAA,mMAAA,CAAA,MAAG;QAAE,aAAA,uNAAA,CAAA,cAAW;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,OAAA,uMAAA,CAAA,QAAK;QACxF,YAAA,iNAAA,CAAA,aAAU;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,WAAA,+MAAA,CAAA,YAAS;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,SAAA,+MAAA,CAAA,UAAO;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,UAAA,iNAAA,CAAA,WAAQ;QAAE,MAAA,qMAAA,CAAA,OAAI;QACvF,OAAA,uMAAA,CAAA,QAAK;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,YAAA,qNAAA,CAAA,aAAU;QAAE,SAAA,2MAAA,CAAA,UAAO;QAAE,WAAA,mNAAA,CAAA,YAAS;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,WAAA,mNAAA,CAAA,YAAS;QAAE,UAAA,iNAAA,CAAA,WAAQ;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,UAAA,6MAAA,CAAA,WAAQ;QACxF,QAAA,yMAAA,CAAA,SAAM;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,QAAA,6MAAA,CAAA,SAAM;QAAE,aAAA,uNAAA,CAAA,cAAW;QAAE,cAAA,yNAAA,CAAA,eAAY;QAAE,UAAA,iNAAA,CAAA,WAAQ;QAAE,aAAA,uNAAA,CAAA,cAAW;QAAE,YAAA,iNAAA,CAAA,aAAU;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAC7F,QAAA,yMAAA,CAAA,SAAM;QAAE,MAAA,qMAAA,CAAA,OAAI;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,KAAA,mMAAA,CAAA,MAAG;QAAE,KAAA,mMAAA,CAAA,MAAG;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,QAAA,6MAAA,CAAA,SAAM;QAAE,YAAA,qNAAA,CAAA,aAAU;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,IAAA,iMAAA,CAAA,KAAE;QACtF,MAAA,qMAAA,CAAA,OAAI;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAAE,QAAA,+MAAA,CAAA,SAAM;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,UAAA,6MAAA,CAAA,WAAQ;QAAE,OAAA,uMAAA,CAAA,QAAK;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,SAAA,+MAAA,CAAA,UAAO;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,OAAA,uMAAA,CAAA,QAAK;QACtF,MAAA,qMAAA,CAAA,OAAI;QAAE,QAAA,yMAAA,CAAA,SAAM;QAAE,GAAA,+LAAA,CAAA,IAAC;QAAE,SAAA,+MAAA,CAAA,UAAO;QAAE,KAAA,mMAAA,CAAA,MAAG;IAC/B;IACA,OAAO,OAAO,CAAC,SAAS,IAAI,yMAAA,CAAA,SAAM,EAAE,sCAAsC;AAC5E;AAEO,SAAS,QAAQ,EACtB,cAAc,KAAK,EACnB,UAAU,EACV,cAAc,QAAQ,EACT;;IACb,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,SAAM,AAAD;IAC7E,MAAM,EAAE,qBAAqB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD;IACzD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACrD,IAAI,IAAI,MAAM,eAAe,GAAG;QAAC,MAAM,eAAe,CAAC,EAAE;KAAC,GAAG,EAAE;IAEjE,MAAM,CAAC,0BAA0B,4BAA4B,GAC7D,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAGT,MAAM,gBAAgB,CAAC;QACrB,MAAM,cAAc,IAAI,IAAI;QAC5B,IAAI,YAAY,GAAG,CAAC,YAAY;YAC9B,YAAY,MAAM,CAAC;QACrB,OAAO;YACL,YAAY,GAAG,CAAC;QAClB;QACA,oBAAoB;IACtB;IAEA,MAAM,sBAAsB,CAAC;QAC3B,SAAS;YAAE,MAAM;YAAkB,SAAS;QAAQ;QACpD,IAAI,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,GAAG;YACrC,oBAAoB,CAAC,OAAS,IAAI,IAAI;uBAAI;oBAAM,QAAQ,EAAE;iBAAC;QAC7D;IACF;IAEA,MAAM,sBAAsB,OAAO;QACjC,IAAI;YACF,MAAM,UAAU,MAAM,cAAc;gBAClC,MAAM,YAAY,IAAI;gBACtB,aAAa,YAAY,WAAW;gBACpC,OAAO,YAAY,KAAK;YAC1B;YAEA,IAAI,SAAS;gBACX,uCAAuC;gBACvC,MAAM;gBAEN,8BAA8B;gBAC9B,IAAI,gBAAgB,UAAU;oBAC5B,aAAa;gBACf;gBAEA,wDAAwD;gBACxD,4BAA4B;YAC9B,OAAO;gBACL,yCAAyC;gBACzC,MAAM,IAAI,MAAM;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,8CAA8C;QAC9C,iDAAiD;QACnD;IACF;IAEA,MAAM,sBAAsB,OAAO,WAAmB;QACpD,MAAM,YAAY,MAAM,QAAQ;YAC9B,OAAO;YACP,SAAS,CAAC,uCAAuC,EAAE,YAAY,gCAAgC,CAAC;YAChG,aAAa;YACb,YAAY;YACZ,MAAM;QACR;QAEA,IAAI,WAAW;YACb,IAAI;gBACF,MAAM,cAAc;gBACpB,uCAAuC;gBACvC,MAAM;gBAEN,qDAAqD;gBACrD,IAAI,MAAM,eAAe,EAAE,OAAO,WAAW;oBAC3C,SAAS;wBAAE,MAAM;wBAAkB,SAAS;oBAAK;oBACjD,SAAS;wBAAE,MAAM;wBAAgB,SAAS;oBAAK;gBACjD;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,oDAAoD;gBACpD,MAAM,iBAAiB,MAAM,QAAQ;oBACnC,OAAO;oBACP,SAAS;oBACT,aAAa;oBACb,MAAM;gBACR;YACF;QACF;IACF;IAIA,MAAM,oBAAoB,CAAC;QACzB,uDAAuD;QACvD,MAAM,UAAU,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,MAAM,SAAS;QACjE,IAAI,WAAW,MAAM,eAAe,EAAE,OAAO,QAAQ,EAAE,EAAE;YACvD,SAAS;gBAAE,MAAM;gBAAkB,SAAS;YAAQ;QACtD;QAEA,SAAS;YAAE,MAAM;YAAgB,SAAS;QAAM;QAChD,iDAAiD;QACjD,IAAI,gBAAgB,UAAU;YAC5B,aAAa;QACf;IACF;IAEA,MAAM,YAAY;QAClB;YACE,MAAM,sMAAA,CAAA,OAAI;YACV,OAAO;YACP,QAAQ,gBAAgB;YACxB,MAAM;QACR;QACA;YACE,MAAM,yMAAA,CAAA,SAAM;YACZ,OAAO;YACP,QAAQ,gBAAgB;YACxB,MAAM;QACR;QACA;YACE,MAAM,6MAAA,CAAA,WAAQ;YACd,OAAO;YACP,QAAQ,gBAAgB;YACxB,MAAM;QACR;QACA;YACE,MAAM,uMAAA,CAAA,QAAK;YACX,OAAO;YACP,QAAQ,gBAAgB;YACxB,MAAM;QACR;WACI,MAAM,WAAW,EAAE,SAAS,UAAU;YAAC;gBACzC,MAAM,yMAAA,CAAA,SAAM;gBACZ,OAAO;gBACP,QAAQ,gBAAgB;gBACxB,MAAM;gBACN,OAAO,MAAM,wBAAwB,EAAE,UAAU;YACnD;SAAE,GAAG,EAAE;QACP;YACE,MAAM,6MAAA,CAAA,WAAQ;YACd,OAAO;YACP,QAAQ,gBAAgB;YACxB,MAAM;QACR;KAAE;IAGF,qBACE;;0BACE,6LAAC;gBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iIACA,cAAc,SAAS;gBAEzB,YAAS;;kCAGT,6LAAC;wBAAI,WAAU;wBAA6C,YAAS;kCAClE,CAAC,6BACE,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACD,WAAU;oCACV,YAAS;;sDAEP,6LAAC;4CAAK,WAAU;sDAAa;;;;;;wCAAa;sDAAC,6LAAC;4CAAK,WAAU;sDAAoB;;;;;;wCAAQ;sDAAC,6LAAC;4CAAK,WAAU;sDAA+B;;;;;;;;;;;;8CAEzI,6LAAC;oCAAK,WAAU;8CAA0F;;;;;;;;;;;;;;;;;kCAUlH,6LAAC;wBAAI,WAAU;wBAAY,YAAS;kCAClC,cAAA,6LAAC;4BAAG,WAAU;4BAAY,YAAS;sCAChC,UAAU,GAAG,CAAC,CAAC,MAAM,sBACtB,6LAAC;oCAAmB,YAAS;8CACzB,cAAA,6LAAC;wCACD,SAAS,IAAM,aAAa,KAAK,IAAI;wCACrC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kBACA,KAAK,MAAM,GAAG,WAAW;wCAE3B,YAAS;;0DAEP,6LAAC,KAAK,IAAI;gDACV,WAAU;gDACV,YAAS;;;;;;4CAER,CAAC,6BACJ,6LAAC;gDAAK,WAAU;gDAAsB,YAAS;0DACxC,KAAK,KAAK;;;;;;4CAGd,CAAC,eAAe,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,mBAC1C,6LAAC;gDAAK,WAAU;0DACb,KAAK,KAAK;;;;;;;;;;;;mCApBZ,KAAK,IAAI;;;;;;;;;;;;;;;oBA8BrB,CAAC,6BACF,6LAAC;wBAAI,WAAU;wBAAY,YAAS;;0CAChC,6LAAC;gCACD,WAAU;gCACV,YAAS;;kDAEP,6LAAC;wCACD,WAAU;wCACV,YAAS;kDAAU;;;;;;oCAKlB,CAAC,MAAM,WAAW,EAAE,SAAS,WAAW,MAAM,WAAW,EAAE,SAAS,SAAS,mBAC5E,6LAAC;wCACD,SAAS,IAAM,4BAA4B;wCAC3C,WAAU;wCACV,OAAM;wCACN,YAAS;kDAEP,cAAA,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;4CAAwB,YAAS;;;;;;;;;;;;;;;;;0CAKvD,6LAAC;gCAAI,WAAU;gCAAY,YAAS;0CACjC,MAAM,QAAQ,CACZ,MAAM,CAAC,CAAA,UACN,mCAAmC;oCACnC,MAAM,WAAW,EAAE,SAAS,WAC5B,+DAA+D;oCAC/D,QAAQ,OAAO,EAAE,KAAK,CAAA,SAAU,OAAO,MAAM,KAAK,MAAM,WAAW,EAAE,OACrE,oDAAoD;oCACpD,QAAQ,OAAO,KAAK,MAAM,WAAW,EAAE,IAExC,GAAG,CAAC,CAAC,wBACV,6LAAC;wCAAmD,YAAS;;0DACvD,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDACH,SAAS;4DACP,oBAAoB;4DACpB,6BAA6B;4DAC7B,IAAI,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,GAAG;gEACrC,oBAAoB,CAAC,OAAS,IAAI,IAAI;2EAAI;wEAAM,QAAQ,EAAE;qEAAC;4DAC7D;wDACF;wDACA,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yEACA,MAAM,eAAe,EAAE,OAAO,QAAQ,EAAE,GACxC,uCACA;wDAEF,YAAS;;4DAEJ,iBAAiB,GAAG,CAAC,QAAQ,EAAE,kBACpC,6LAAC,uNAAA,CAAA,cAAW;gEAAC,WAAU;gEAAU,YAAS;;;;;qFAE1C,6LAAC,yNAAA,CAAA,eAAY;gEAAC,WAAU;gEAAU,YAAS;;;;;;0EAEvC,6LAAC;gEACH,WAAU;gEACV,OAAO;oEAAE,iBAAiB,QAAQ,KAAK;gEAAC;gEACxC,YAAS;;;;;;0EAEP,6LAAC;gEAAK,WAAU;gEAAmB,YAAS;0EACzC,QAAQ,IAAI;;;;;;;;;;;;oDAKhB,MAAM,WAAW,EAAE,SAAS,yBAC3B,6LAAC;wDACC,SAAS,CAAC;4DACR,EAAE,eAAe;4DACjB,oBAAoB,QAAQ,EAAE,EAAE,QAAQ,IAAI;wDAC9C;wDACA,WAAU;wDACV,OAAM;kEAEN,cAAA,6LAAC,6MAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;;;;;;;;;;;;4CAKvB,iBAAiB,GAAG,CAAC,QAAQ,EAAE,mBACpC,6LAAC;gDAAI,WAAU;gDAAsB,YAAS;0DACrC,MAAM,MAAM,CACnB,MAAM,CAAC,CAAC;oDACN,oCAAoC;oDACpC,IAAI,MAAM,SAAS,KAAK,QAAQ,EAAE,EAAE,OAAO;oDAE3C,iCAAiC;oDACjC,IAAI,MAAM,WAAW,EAAE,SAAS,SAAS,OAAO;oDAEhD,0EAA0E;oDAC1E,OAAO,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAA,SAAU,OAAO,EAAE,KAAK,MAAM,WAAW,EAAE;gDACzE,GACA,GAAG,CAAC,CAAC,sBACL,6LAAC;wDAEC,SAAS,IAAM,kBAAkB;wDACjC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kFACA,MAAM,aAAa,EAAE,OAAO,MAAM,EAAE,GACpC,uCACA;wDAEF,YAAS;;0EAEE,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC,iBAAiB,MAAM,IAAI,IAAI,WAAW;gEAAE,WAAW;4DAAU;0EACtF,6LAAC;gEACT,WAAU;gEACV,YAAS;0EAEE,MAAM,IAAI;;;;;;;uDAflB,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,MAAM,IAAI;;;;;;;;;;;uCA/DrC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,MAAM,IAAI;;;;;;;;;;;;;;;;oBA2FrD,CAAC,6BACF,6LAAC;wBACC,WAAU;wBACV,YAAS;;0CAEP,6LAAC;gCACD,WAAU;gCACV,YAAS;0CAAU;;;;;;0CAInB,6LAAC;gCAAI,WAAU;gCAAY,YAAS;;kDAClC,6LAAC;wCAAI,WAAU;wCAA+B,YAAS;;0DACrD,6LAAC;gDAAK,WAAU;gDAAgB,YAAS;0DAAU;;;;;;0DAGnD,6LAAC;gDAAK,WAAU;gDAAa,YAAS;0DAEtC,MAAM,KAAK,CAAC,MAAM,CAChB,CAAC,IACD,EAAE,SAAS,KAAK,MAAM,eAAe,EAAE,MACvC,EAAE,OAAO,KAAK,MAAM,aAAa,EAAE,IACnC,MAAM;;;;;;;;;;;;kDAIV,6LAAC;wCAAI,WAAU;wCAA+B,YAAS;;0DACrD,6LAAC;gDAAK,WAAU;gDAAgB,YAAS;0DAAU;;;;;;0DAGnD,6LAAC;gDAAK,WAAU;gDAAkB,YAAS;0DAE3C,MAAM,KAAK,CAAC,MAAM,CAChB,CAAC,IACD,EAAE,MAAM,KAAK,iBACb,EAAE,SAAS,KAAK,MAAM,eAAe,EAAE,MACvC,EAAE,OAAO,KAAK,MAAM,aAAa,EAAE,IACnC,MAAM;;;;;;;;;;;;kDAKV,6LAAC;wCAAI,WAAU;wCAA+B,YAAS;;0DACrD,6LAAC;gDAAK,WAAU;gDAAgB,YAAS;0DAAU;;;;;;0DAGnD,6LAAC;gDAAK,WAAU;gDAAiB,YAAS;0DAE1C,MAAM,KAAK,CAAC,MAAM,CAChB,CAAC,IACD,EAAE,MAAM,KAAK,UACb,EAAE,SAAS,KAAK,MAAM,eAAe,EAAE,MACvC,EAAE,OAAO,KAAK,MAAM,aAAa,EAAE,IACnC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUlB,6LAAC,2IAAA,CAAA,qBAAkB;gBACjB,QAAQ;gBACR,SAAS,IAAM,4BAA4B;gBAC3C,QAAQ;gBACR,YAAS;;;;;;YAGV;;;AAIP;GA7ZgB;;QAK0D,iIAAA,CAAA,SAAM;QACnC,mIAAA,CAAA,kBAAe;;;KAN5C","debugId":null}}]
}