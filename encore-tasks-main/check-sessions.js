const Database = require('better-sqlite3');
const path = require('path');

async function checkSessions() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É sessions...');
    
    const dbPath = path.join(__dirname, 'database.sqlite');
    const db = new Database(dbPath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ sessions
    const tables = db.prepare("SELECT name FROM sqlite_master WHERE type='table' AND name='sessions'").all();
    
    if (tables.length === 0) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ sessions –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
      db.close();
      return;
    }
    
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ sessions —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    const schema = db.prepare('PRAGMA table_info(sessions)').all();
    console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã sessions:');
    schema.forEach(col => {
      console.log(`  - ${col.name}: ${col.type} ${col.notnull ? 'NOT NULL' : ''} ${col.pk ? 'PRIMARY KEY' : ''}`);
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
    const sessions = db.prepare('SELECT * FROM sessions ORDER BY created_at DESC LIMIT 10').all();
    
    console.log(`\nüìä –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π: ${sessions.length}`);
    
    if (sessions.length > 0) {
      console.log('\nüîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Å—Å–∏–∏:');
      sessions.forEach((session, index) => {
        console.log(`\n${index + 1}. ID: ${session.id}`);
        console.log(`   User ID: ${session.user_id}`);
        console.log(`   Token: ${session.token ? session.token.substring(0, 50) + '...' : 'null'}`);
        console.log(`   Created: ${session.created_at}`);
        console.log(`   Expires: ${session.expires_at}`);
      });
    } else {
      console.log('\n‚ùå –í —Ç–∞–±–ª–∏—Ü–µ sessions –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π!');
    }
    
    db.close();
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    console.error('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkSessions();