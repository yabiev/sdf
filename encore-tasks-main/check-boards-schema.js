const Database = require('better-sqlite3');
const path = require('path');

const dbPath = path.join(__dirname, 'database.sqlite');
console.log('üìä –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã boards...');
console.log('üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', dbPath);

try {
  const db = new Database(dbPath);
  
  // –ü–æ–ª—É—á–∞–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã boards
  const schema = db.prepare("SELECT sql FROM sqlite_master WHERE type='table' AND name='boards'").get();
  
  if (schema) {
    console.log('\nüìã –°—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã boards:');
    console.log(schema.sql);
  } else {
    console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ boards –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–æ–Ω–∫–∞—Ö
  try {
    const columns = db.prepare("PRAGMA table_info(boards)").all();
    console.log('\nüìä –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã boards:');
    columns.forEach(col => {
      console.log(`- ${col.name} (${col.type}) ${col.notnull ? 'NOT NULL' : ''} ${col.pk ? 'PRIMARY KEY' : ''}`);
    });
  } catch (e) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–æ–Ω–∫–∞—Ö:', e.message);
  }
  
  db.close();
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
}