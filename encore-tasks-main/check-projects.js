import Database from 'better-sqlite3';

const db = new Database('./database.sqlite');

console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
console.log('=' .repeat(50));

try {
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
  const projects = db.prepare('SELECT * FROM projects ORDER BY created_at DESC').all();
  
  console.log(`–í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –±–∞–∑–µ: ${projects.length}`);
  console.log('');
  
  if (projects.length === 0) {
    console.log('‚ùå –ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
  } else {
    projects.forEach((project, index) => {
      console.log(`${index + 1}. ID: ${project.id}`);
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${project.name}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${project.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
      console.log(`   –¶–≤–µ—Ç: ${project.color}`);
      console.log(`   –í–ª–∞–¥–µ–ª–µ—Ü: ${project.owner_id}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${project.created_at}`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω: ${project.updated_at}`);
      console.log('---');
    });
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø—Ä–æ–µ–∫—Ç–æ–≤
  console.log('\nüïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø—Ä–æ–µ–∫—Ç–æ–≤:');
  const recentProjects = db.prepare('SELECT * FROM projects ORDER BY created_at DESC LIMIT 5').all();
  
  recentProjects.forEach((project, index) => {
    console.log(`${index + 1}. ${project.name} (${project.created_at})`);
  });
  
} catch (error) {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error.message);
} finally {
  db.close();
}