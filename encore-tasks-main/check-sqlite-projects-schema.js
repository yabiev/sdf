const Database = require('better-sqlite3');
const path = require('path');

const dbPath = path.join(__dirname, 'database.sqlite');
console.log('üìÅ –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', dbPath);

try {
  const db = new Database(dbPath);
  
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã projects...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
  const tableExists = db.prepare(`
    SELECT name FROM sqlite_master 
    WHERE type='table' AND name='projects'
  `).get();
  
  if (tableExists) {
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ projects —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–æ–Ω–∫–∞—Ö
    const columns = db.prepare('PRAGMA table_info(projects)').all();
    console.log('\nüìã –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã projects:');
    columns.forEach(col => {
      console.log(`  - ${col.name} (${col.type}) ${col.notnull ? 'NOT NULL' : ''} ${col.pk ? 'PRIMARY KEY' : ''}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ created_by
    const hasCreatedBy = columns.some(col => col.name === 'created_by');
    console.log(`\nüîç –ö–æ–ª–æ–Ω–∫–∞ created_by: ${hasCreatedBy ? '‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º CREATE TABLE statement
    const createStatement = db.prepare(`
      SELECT sql FROM sqlite_master 
      WHERE type='table' AND name='projects'
    `).get();
    
    console.log('\nüìÑ CREATE TABLE statement:');
    console.log(createStatement.sql);
    
  } else {
    console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ projects –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  }
  
  db.close();
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ö–µ–º—ã:', error.message);
}