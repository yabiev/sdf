const bcrypt = require('bcrypt');
const { Pool } = require('pg');
require('dotenv').config();

async function updateAdminPassword() {
  const pool = new Pool({
    host: process.env.DB_HOST || 'localhost',
    port: process.env.DB_PORT || 5432,
    database: process.env.DB_NAME || 'encore_tasks',
    user: process.env.DB_USER || 'postgres',
    password: process.env.DB_PASSWORD || 'postgres',
    ssl: process.env.DB_SSL === 'true'
  });

  try {
    console.log('üîê –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    const correctPassword = 'Ad580dc6axelencore';
    const saltRounds = 10;
    
    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    const hashedPassword = await bcrypt.hash(correctPassword, saltRounds);
    console.log('üîê –ù–æ–≤—ã–π —Ö–µ—à –ø–∞—Ä–æ–ª—è:', hashedPassword);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const updateQuery = 'UPDATE users SET password_hash = $1 WHERE email = $2';
    const result = await pool.query(updateQuery, [hashedPassword, 'axelencore@mail.ru']);
    
    console.log('‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω. –ó–∞—Ç—Ä–æ–Ω—É—Ç–æ —Å—Ç—Ä–æ–∫:', result.rowCount);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    const checkQuery = 'SELECT email, password_hash FROM users WHERE email = $1';
    const checkResult = await pool.query(checkQuery, ['axelencore@mail.ru']);
    
    if (checkResult.rows.length > 0) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', checkResult.rows[0].email);
      console.log('‚úÖ –•–µ—à –ø–∞—Ä–æ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω:', checkResult.rows[0].password_hash.substring(0, 20) + '...');
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
      const isValid = await bcrypt.compare(correctPassword, checkResult.rows[0].password_hash);
      console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è:', isValid ? '–£–°–ü–ï–®–ù–û' : '–û–®–ò–ë–ö–ê');
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è:', error);
  } finally {
    await pool.end();
  }
}

updateAdminPassword();