const puppeteer = require('puppeteer');

async function testAuth() {
  let browser;
  
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    
    browser = await puppeteer.launch({
      headless: false,
      defaultViewport: null,
      args: ['--start-maximized']
    });
    
    const page = await browser.newPage();
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üì± –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ localhost:3001...');
    await page.goto('http://localhost:3001', { 
      waitUntil: 'networkidle2',
      timeout: 15000 
    });
    
    // –°–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.screenshot({ path: 'homepage.png', fullPage: true });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    const emailField = await page.$('input[type="email"]');
    const passwordField = await page.$('input[type="password"]');
    const loginButton = await page.$('button[type="submit"]');
    
    if (!emailField || !passwordField || !loginButton) {
      console.log('‚ùå –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    console.log('‚úÖ –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–∞');
    
    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
    await emailField.type('admin@example.com');
    await passwordField.type('admin123');
    
    console.log('üìù –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
    
    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—Ö–æ–¥–∞
    await loginButton.click();
    
    // –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    await page.waitForNavigation({ 
      waitUntil: 'networkidle2',
      timeout: 10000 
    });
    
    console.log('üîê –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
    
    // –°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
    await page.screenshot({ path: 'after-login-simple.png', fullPage: true });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ URL
    const currentUrl = page.url();
    console.log('üåê –¢–µ–∫—É—â–∏–π URL:', currentUrl);
    
    if (currentUrl.includes('/dashboard') || currentUrl.includes('/boards')) {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É');
    } else {
      console.log('‚ùå –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤—Ö–æ–¥–æ–º');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    
    if (browser) {
      try {
        const page = await browser.newPage();
        await page.screenshot({ path: 'error-simple.png', fullPage: true });
        console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
      } catch (screenshotError) {
        console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏');
      }
    }
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

testAuth()