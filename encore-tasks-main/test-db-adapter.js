// –¢–µ—Å—Ç database adapter
const path = require('path');

// –ò–º–∏—Ç–∏—Ä—É–µ–º Next.js –æ–∫—Ä—É–∂–µ–Ω–∏–µ
process.env.NODE_ENV = 'development';
process.env.DATABASE_TYPE = 'sqlite';
process.env.DATABASE_URL = path.join(__dirname, 'database.db');

async function testDatabaseAdapter() {
  try {
    console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Database Adapter...');
    
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –¥–ª—è ESM –º–æ–¥—É–ª—è
    const { dbAdapter } = await import('./src/lib/database-adapter.js');
    
    console.log('üìã Database Adapter –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    
    // –¢–µ—Å—Ç getUserByEmail
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getUserByEmail...');
    
    const user = await dbAdapter.getUserByEmail('test@example.com');
    
    console.log('‚úÖ getUserByEmail –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log('üë§ –†–µ–∑—É–ª—å—Ç–∞—Ç:', user);
    
    if (user) {
      console.log('üìã –î–µ—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
      console.log('  ID:', user.id);
      console.log('  Email:', user.email);
      console.log('  Name:', user.name);
      console.log('  Password hash:', user.password_hash ? '–µ—Å—Ç—å' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      console.log('  Role:', user.role);
      
      // –¢–µ—Å—Ç –ø–∞—Ä–æ–ª—è
      if (user.password_hash) {
        const bcrypt = require('bcryptjs');
        const isValid = await bcrypt.compare('password123', user.password_hash);
        console.log('  –ü–∞—Ä–æ–ª—å password123 –≤–∞–ª–∏–¥–µ–Ω:', isValid);
      }
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error('‚ùå Stack trace:', error.stack);
  }
}

testDatabaseAdapter();