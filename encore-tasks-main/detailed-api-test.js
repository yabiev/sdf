const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:3001';
let authToken = null;

async function testLogin() {
  console.log('üîê –¢–µ—Å—Ç–∏—Ä—É—é LOGIN...');
  try {
    const response = await fetch(`${BASE_URL}/api/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'test@example.com',
        password: 'password123'
      })
    });

    const responseText = await response.text();
    console.log(`   Status: ${response.status}`);
    console.log(`   Response: ${responseText}`);

    if (response.ok) {
      const data = JSON.parse(responseText);
      authToken = data.token;
      console.log('   ‚úÖ LOGIN —É—Å–ø–µ—à–µ–Ω');
      return true;
    } else {
      console.log('   ‚ùå LOGIN –Ω–µ—É—Å–ø–µ—à–µ–Ω');
      return false;
    }
  } catch (error) {
    console.log(`   üí• LOGIN –æ—à–∏–±–∫–∞: ${error.message}`);
    return false;
  }
}

async function testProjects() {
  console.log('üìÅ –¢–µ—Å—Ç–∏—Ä—É—é PROJECTS...');
  try {
    const response = await fetch(`${BASE_URL}/api/projects`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${authToken}`,
        'Content-Type': 'application/json',
      }
    });

    const responseText = await response.text();
    console.log(`   Status: ${response.status}`);
    console.log(`   Response: ${responseText}`);

    if (response.ok) {
      console.log('   ‚úÖ PROJECTS —É—Å–ø–µ—à–µ–Ω');
      return JSON.parse(responseText);
    } else {
      console.log('   ‚ùå PROJECTS –Ω–µ—É—Å–ø–µ—à–µ–Ω');
      return null;
    }
  } catch (error) {
    console.log(`   üí• PROJECTS –æ—à–∏–±–∫–∞: ${error.message}`);
    return null;
  }
}

async function testBoards() {
  console.log('üìã –¢–µ—Å—Ç–∏—Ä—É—é BOARDS...');
  try {
    const response = await fetch(`${BASE_URL}/api/boards`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${authToken}`,
        'Content-Type': 'application/json',
      }
    });

    const responseText = await response.text();
    console.log(`   Status: ${response.status}`);
    console.log(`   Response: ${responseText}`);

    if (response.ok) {
      console.log('   ‚úÖ BOARDS —É—Å–ø–µ—à–µ–Ω');
      return JSON.parse(responseText);
    } else {
      console.log('   ‚ùå BOARDS –Ω–µ—É—Å–ø–µ—à–µ–Ω');
      return null;
    }
  } catch (error) {
    console.log(`   üí• BOARDS –æ—à–∏–±–∫–∞: ${error.message}`);
    return null;
  }
}

async function testTasks() {
  console.log('üìù –¢–µ—Å—Ç–∏—Ä—É—é TASKS...');
  try {
    const response = await fetch(`${BASE_URL}/api/tasks`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${authToken}`,
        'Content-Type': 'application/json',
      }
    });

    const responseText = await response.text();
    console.log(`   Status: ${response.status}`);
    console.log(`   Response: ${responseText}`);

    if (response.ok) {
      console.log('   ‚úÖ TASKS —É—Å–ø–µ—à–µ–Ω');
      return JSON.parse(responseText);
    } else {
      console.log('   ‚ùå TASKS –Ω–µ—É—Å–ø–µ—à–µ–Ω');
      return null;
    }
  } catch (error) {
    console.log(`   üí• TASKS –æ—à–∏–±–∫–∞: ${error.message}`);
    return null;
  }
}

async function runDetailedTest() {
  console.log('üöÄ –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê API ENDPOINTS');
  console.log('==================================================');

  const loginSuccess = await testLogin();
  if (!loginSuccess) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ç–µ—Å—Ç—ã.');
    return;
  }

  await testProjects();
  await testBoards();
  await testTasks();

  console.log('==================================================');
  console.log('üèÅ –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

runDetailedTest().catch(console.error);