const { Pool } = require('pg');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
const pool = new Pool({
  user: 'postgres',
  host: 'localhost',
  database: 'encore_tasks',
  password: 'postgres',
  port: 5432,
});

async function testUserProjects() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getUserProjects...');
    
    const userId = 2;
    console.log('üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userResult = await pool.query('SELECT * FROM users WHERE id = $1', [userId]);
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', userResult.rows.length > 0);
    if (userResult.rows.length > 0) {
      console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userResult.rows[0]);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const ownedProjectsResult = await pool.query('SELECT * FROM projects WHERE owner_id = $1', [userId]);
    console.log('üìã –ü—Ä–æ–µ–∫—Ç—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', ownedProjectsResult.rows.length);
    console.log('üìã –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:', ownedProjectsResult.rows);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–ª–µ–Ω—Å—Ç–≤–æ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö
    const membershipResult = await pool.query('SELECT * FROM project_members WHERE user_id = $1', [userId]);
    console.log('üë• –ß–ª–µ–Ω—Å—Ç–≤–æ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö:', membershipResult.rows.length);
    console.log('üë• –î–∞–Ω–Ω—ã–µ —á–ª–µ–Ω—Å—Ç–≤–∞:', membershipResult.rows);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—Ä–æ—Å getUserProjects
    console.log('üîç –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—Ä–æ—Å getUserProjects...');
    const startTime = Date.now();
    
    const result = await pool.query(
      `SELECT DISTINCT p.* FROM projects p 
       LEFT JOIN project_members pm ON p.id = pm.project_id 
       WHERE (p.owner_id = $1 OR pm.user_id = $1) 
       ORDER BY p.created_at DESC`,
      [userId]
    );
    
    const endTime = Date.now();
    console.log(`‚è±Ô∏è –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${endTime - startTime}ms`);
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞:', result.rows.length, '–ø—Ä–æ–µ–∫—Ç–æ–≤');
    console.log('üìä –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:', result.rows);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    await pool.end();
  }
}

testUserProjects();