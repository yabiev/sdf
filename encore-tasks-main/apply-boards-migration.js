const Database = require('better-sqlite3');
const path = require('path');

const dbPath = path.join(__dirname, 'database.sqlite');
console.log('üîß –ü—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã boards...');
console.log('üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', dbPath);

try {
  const db = new Database(dbPath);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–æ–ª–æ–Ω–∫–∞ description
  const columns = db.prepare("PRAGMA table_info(boards)").all();
  const hasDescription = columns.some(col => col.name === 'description');
  
  if (hasDescription) {
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ description —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ boards');
  } else {
    console.log('‚ûï –î–æ–±–∞–≤–ª—è—é –∫–æ–ª–æ–Ω–∫—É description –≤ —Ç–∞–±–ª–∏—Ü—É boards...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É description
    db.exec('ALTER TABLE boards ADD COLUMN description TEXT');
    
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ description —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const updatedColumns = db.prepare("PRAGMA table_info(boards)").all();
  console.log('\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã boards:');
  updatedColumns.forEach(col => {
    console.log(`- ${col.name} (${col.type}) ${col.notnull ? 'NOT NULL' : ''} ${col.pk ? 'PRIMARY KEY' : ''}`);
  });
  
  db.close();
  console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
  process.exit(1);
}