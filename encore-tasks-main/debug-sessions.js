const Database = require('better-sqlite3');
const jwt = require('jsonwebtoken');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const DB_PATH = path.join(__dirname, 'database.db');
const JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key';

console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Å—Å–∏—è–º–∏...');
console.log('üìÅ –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', DB_PATH);

try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const db = new Database(DB_PATH);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite —É—Å–ø–µ—à–Ω–æ');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã user_sessions
    console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã user_sessions:');
    const tableInfo = db.prepare("PRAGMA table_info(user_sessions)").all();
    console.table(tableInfo);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ user_sessions
    console.log('\nüìä –í—Å–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ user_sessions:');
    const allSessions = db.prepare('SELECT * FROM user_sessions').all();
    console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π:', allSessions.length);
    
    if (allSessions.length > 0) {
        console.table(allSessions);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–µ—Å—Å–∏—é
        const lastSession = allSessions[allSessions.length - 1];
        console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏:');
        console.log('ID —Å–µ—Å—Å–∏–∏:', lastSession.id);
        console.log('–¢–æ–∫–µ–Ω —Å–µ—Å—Å–∏–∏:', lastSession.session_token ? lastSession.session_token.substring(0, 50) + '...' : '–ù–ï–¢');
        console.log('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', lastSession.user_id);
        console.log('–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:', lastSession.created_at);
        console.log('–í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è:', lastSession.expires_at);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ –ª–∏ —Å–µ—Å—Å–∏—è
        const now = new Date();
        const expiresAt = new Date(lastSession.expires_at);
        console.log('–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:', now.toISOString());
        console.log('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞?', now > expiresAt ? '–î–ê' : '–ù–ï–¢');
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–µ—Å—Å–∏—é –ø–æ —Ç–æ–∫–µ–Ω—É
        if (lastSession.session_token) {
            console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å–µ—Å—Å–∏–∏ –ø–æ —Ç–æ–∫–µ–Ω—É...');
            const foundSession = db.prepare('SELECT * FROM user_sessions WHERE session_token = ?').get(lastSession.session_token);
            console.log('–°–µ—Å—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞ –ø–æ —Ç–æ–∫–µ–Ω—É?', foundSession ? '–î–ê' : '–ù–ï–¢');
            
            if (foundSession) {
                console.log('–ù–∞–π–¥–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è:', foundSession);
            }
        }
    } else {
        console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ user_sessions –ø—É—Å—Ç–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã users
    console.log('\nüë• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
    const users = db.prepare('SELECT id, email, created_at FROM users LIMIT 5').all();
    console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', users.length);
    if (users.length > 0) {
        console.table(users);
    }
    
    // –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏...');
    const testUserId = users.length > 0 ? users[0].id : 'test-user-id';
    const testToken = 'test-session-token-' + Date.now();
    const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 —á–∞—Å–∞
    
    try {
        const insertResult = db.prepare(`
            INSERT INTO user_sessions (session_token, user_id, expires_at, created_at)
            VALUES (?, ?, ?, ?)
        `).run(testToken, testUserId, expiresAt.toISOString(), new Date().toISOString());
        
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞:', insertResult);
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–æ–∑–¥–∞–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
        const foundTestSession = db.prepare('SELECT * FROM user_sessions WHERE session_token = ?').get(testToken);
        console.log('–¢–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞?', foundTestSession ? '–î–ê' : '–ù–ï–¢');
        
        if (foundTestSession) {
            console.log('–ù–∞–π–¥–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è:', foundTestSession);
            
            // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
            db.prepare('DELETE FROM user_sessions WHERE session_token = ?').run(testToken);
            console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è —É–¥–∞–ª–µ–Ω–∞');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–µ—Å—Å–∏–∏:', error.message);
    }
    
    db.close();
    console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ:', error.message);
    console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
}