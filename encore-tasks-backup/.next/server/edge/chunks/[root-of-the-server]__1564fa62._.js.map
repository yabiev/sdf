{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport jwt from 'jsonwebtoken';\n\n// Публичные маршруты, которые не требуют аутентификации\nconst publicPaths = [\n  '/api/auth/login',\n  '/api/auth/register',\n  '/api/auth/logout',\n  '/api/auth/refresh',\n  '/api/health',\n  '/_next',\n  '/favicon.ico',\n  '/static',\n  '/images',\n  '/icons'\n];\n\n// Маршруты только для администраторов\nconst adminPaths = [\n  '/api/admin',\n  '/admin'\n];\n\n// Маршруты, требующие активного статуса пользователя\nconst protectedPaths = [\n  '/api/projects',\n  '/api/boards',\n  '/api/tasks',\n  '/api/users',\n  '/dashboard',\n  '/boards',\n  '/calendar',\n  '/team',\n  '/settings'\n];\n\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n\n  // Пропускаем публичные маршруты\n  if (publicPaths.some(path => pathname.startsWith(path))) {\n    return NextResponse.next();\n  }\n\n  // Получение токена из cookie\n  const token = request.cookies.get('auth-token')?.value;\n  \n  if (!token) {\n    // Для API маршрутов возвращаем JSON ошибку\n    if (pathname.startsWith('/api/')) {\n      return NextResponse.json(\n        {\n          success: false,\n          message: 'Токен не найден'\n        },\n        { status: 401 }\n      );\n    }\n    \n    // Для обычных маршрутов перенаправляем на главную\n    return NextResponse.redirect(new URL('/', request.url));\n  }\n\n  // Проверка и декодирование токена\n  let decoded: { userId: string; sessionId: string; role: string };\n  try {\n    decoded = jwt.verify(token, process.env.JWT_SECRET!) as { userId: string; sessionId: string; role: string };\n  } catch (tokenError) {\n    // Токен недействителен\n    if (pathname.startsWith('/api/')) {\n      return NextResponse.json(\n        {\n          success: false,\n          message: 'Недействительный токен'\n        },\n        { status: 401 }\n      );\n    }\n    \n    // Удаляем недействительный токен и перенаправляем\n    const response = NextResponse.redirect(new URL('/', request.url));\n    response.cookies.set('auth-token', '', {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'strict',\n      maxAge: 0,\n      path: '/'\n    });\n    return response;\n  }\n\n  // Проверяем доступ к админским маршрутам\n  if (adminPaths.some(path => pathname.startsWith(path))) {\n    if (decoded.role !== 'admin') {\n      if (pathname.startsWith('/api/')) {\n        return NextResponse.json(\n          {\n            success: false,\n            message: 'Недостаточно прав доступа'\n          },\n          { status: 403 }\n        );\n      }\n      return NextResponse.redirect(new URL('/', request.url));\n    }\n  }\n\n  // Добавляем информацию о пользователе в заголовки для API маршрутов\n  if (pathname.startsWith('/api/')) {\n    const requestHeaders = new Headers(request.headers);\n    requestHeaders.set('x-user-id', decoded.userId);\n    requestHeaders.set('x-user-role', decoded.role);\n    requestHeaders.set('x-session-id', decoded.sessionId);\n    \n    return NextResponse.next({\n      request: {\n        headers: requestHeaders\n      }\n    });\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */\n    '/((?!_next/static|_next/image|favicon.ico).*)',\n  ],\n};"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAEA,wDAAwD;AACxD,MAAM,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,sCAAsC;AACtC,MAAM,aAAa;IACjB;IACA;CACD;AAED,qDAAqD;AACrD,MAAM,iBAAiB;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,eAAe,WAAW,OAAoB;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,gCAAgC;IAChC,IAAI,YAAY,IAAI,CAAC,CAAA,OAAQ,SAAS,UAAU,CAAC,QAAQ;QACvD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,6BAA6B;IAC7B,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;IAEjD,IAAI,CAAC,OAAO;QACV,2CAA2C;QAC3C,IAAI,SAAS,UAAU,CAAC,UAAU;YAChC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,SAAS;YACX,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,kDAAkD;QAClD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,kCAAkC;IAClC,IAAI;IACJ,IAAI;QACF,UAAU,6IAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;IACpD,EAAE,OAAO,YAAY;QACnB,uBAAuB;QACvB,IAAI,SAAS,UAAU,CAAC,UAAU;YAChC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,SAAS;YACX,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,kDAAkD;QAClD,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;QAC/D,SAAS,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI;YACrC,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,QAAQ;YACR,MAAM;QACR;QACA,OAAO;IACT;IAEA,yCAAyC;IACzC,IAAI,WAAW,IAAI,CAAC,CAAA,OAAQ,SAAS,UAAU,CAAC,QAAQ;QACtD,IAAI,QAAQ,IAAI,KAAK,SAAS;YAC5B,IAAI,SAAS,UAAU,CAAC,UAAU;gBAChC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBACE,SAAS;oBACT,SAAS;gBACX,GACA;oBAAE,QAAQ;gBAAI;YAElB;YACA,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;QACvD;IACF;IAEA,oEAAoE;IACpE,IAAI,SAAS,UAAU,CAAC,UAAU;QAChC,MAAM,iBAAiB,IAAI,QAAQ,QAAQ,OAAO;QAClD,eAAe,GAAG,CAAC,aAAa,QAAQ,MAAM;QAC9C,eAAe,GAAG,CAAC,eAAe,QAAQ,IAAI;QAC9C,eAAe,GAAG,CAAC,gBAAgB,QAAQ,SAAS;QAEpD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;gBACP,SAAS;YACX;QACF;IACF;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;KAKC,GACD;KACD;AACH"}}]
}